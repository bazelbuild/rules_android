---

bazel: 8.0.0rc1

tools_flags: &tools_flags
  ? "--enable_bzlmod=false"
  ? "--enable_workspace=true"
  # Sandboxed SDK tools depend on libraries that require Java runtime 17 or higher.
  ? "--java_runtime_version=17"
rules_flags: &rules_flags
  ? "--enable_bzlmod=false"
  ? "--enable_workspace=true"

tools: &tools
  name: "Tools"
  build_targets:
    - "//android/..."
    - "//src/..."
    - "-//src/java/com/example/sampleapp/..."
    - "//test/..."
    - "-//test/rules/..." # Tested in `rules`
    - "//toolchains/..."
    - "//tools/..."
    - "-//tools/android/..." # TODO(#122): Un-exclude this once #122 is fixed.
  test_targets:
    - "//src/..."
    - "-//src/java/com/example/sampleapp/..."
    - "//test/..."
    - "-//test/rules/..."
  build_flags:
    <<: *tools_flags
  test_flags:
    <<: *tools_flags
tools_bzlmod: &tools_bzlmod
  name: "Tools Bzlmod"
  build_flags:
    <<: *tools_flags
    ? "--enable_bzlmod"
    ? "--enable_workspace=false"
  test_flags:
    <<: *tools_flags
    ? "--enable_bzlmod"
    ? "--enable_workspace=false"
  <<: *tools
rules: &rules
  name: "Rules"
  build_targets:
    - "//rules/..."
  test_targets:
    - "//test/rules/..."
  build_flags:
    <<: *rules_flags
  test_flags:
    <<: *rules_flags
rules_bzlmod: &rules_bzlmod
  name: "Rules Bzlmod"
  build_flags:
    <<: *rules_flags
    ? "--enable_bzlmod"
    ? "--enable_workspace=false"
  test_flags:
    <<: *rules_flags
    ? "--enable_bzlmod"
    ? "--enable_workspace=false"
  <<: *rules

tasks:
  ubuntu2004_tools:
    platform: ubuntu2004
    <<: *tools
  ubuntu2004_rules:
    platform: ubuntu2004
    <<: *rules
  macos_tools:
    platform: macos
    <<: *tools
  macos_rules:
    platform: macos
    <<: *rules
  macos_arm64_tools:
    platform: macos_arm64
    <<: *tools
  macos_arm64_rules:
    platform: macos_arm64
    <<: *rules
  ubuntu2004_tools_bzlmod:
    platform: ubuntu2004
    <<: *tools_bzlmod
  ubuntu2004_rules_bzlmod:
    platform: ubuntu2004
    <<: *rules_bzlmod
  macos_bzlmods_tools:
    platform: macos
    <<: *tools_bzlmod
  macos_bzlmods_rules:
    platform: macos
    <<: *rules_bzlmod
  macos_arm64_tools_bzlmod:
    platform: macos_arm64
    <<: *tools_bzlmod
  macos_arm64_rules_bzlmod:
    platform: macos_arm64
    <<: *rules_bzlmod
  ubuntu2004_basicapp:
    name: "Basic app ubuntu"
    platform: ubuntu2004
    working_directory: examples/basicapp
    build_flags:
      <<: *rules_flags
    build_targets:
      - "//java/com/basicapp:basic_app"
  ubuntu2004_basicapp_bzlmod:
    name: "Basic app ubuntu bzlmod"
    platform: ubuntu2004
    working_directory: examples/basicapp
    build_flags:
      <<: *rules_flags
      ? "--enable_bzlmod"
      ? "--enable_workspace=false"
    build_targets:
      - "//java/com/basicapp:basic_app"
  macos_arm64_basicapp:
    name: "Basic app mac arm64"
    platform: macos_arm64
    working_directory: examples/basicapp
    build_flags:
      <<: *rules_flags
    build_targets:
      - "//java/com/basicapp:basic_app"
  macos_arm64_basicapp_bzlmod:
    name: "Basic app mac arm64 bzlmod"
    platform: macos_arm64
    working_directory: examples/basicapp
    build_flags:
      <<: *rules_flags
      ? "--enable_bzlmod"
      ? "--enable_workspace=false"
    build_targets:
      - "//java/com/basicapp:basic_app"
  windows_basicapp_bzlmod:
    name: "Windows Basicapp Bzlmod"
    platform: windows
    working_directory: examples/basicapp
    build_flags:
      <<: *rules_flags
      ? "--enable_bzlmod"
      ? "--enable_workspace=false"
    build_targets:
      - "//java/com/basicapp:basic_app"
  windows_basicapp:
    name: "Windows Basicapp"
    platform: windows
    working_directory: examples/basicapp
    build_flags:
      <<: *rules_flags
    build_targets:
      - "//java/com/basicapp:basic_app"
